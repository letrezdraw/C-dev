from heapq import heappush, heappop

graph={
 'A':{'B':1,'C':2,'D':5},
 'B':{'A':1,'C':2},
 'C':{'A':2,'B':2,'D':2,'E':1},
 'D':{'A':5,'C':2,'E':2},
 'E':{}
}
h={'A':8,'B':4,'C':3,'D':2,'E':0}

def astar(s,goal):
    pq=[(h[s],0,s,[s])]
    seen=set()
    while pq:
        f,g,u,path=heappop(pq)
        if u==goal: return path,g
        if u in seen: continue
        seen.add(u)
        for v,c in graph[u].items():
            heappush(pq,(g+c+h[v],g+c,v,path+[v]))

path,cost=astar('A','E')
print("Path:",'->'.join(path)," Cost:",cost)